name: Lint and test

on:
  push:
    branches:
      - master
      - test
  pull_request:
    branches-ignore:
      - master_builds
      - test_builds

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Lint and test
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node: ['10', '12', '13', '14']
        rust: [stable, beta, nightly]
    continue-on-error: ${{ matrix.rust == 'nightly' }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          default: true
          components: rustfmt, clippy
          profile: minimal

      - name: Check clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # `--release` needed on Windows to avoid the following error:
          # "Neon only builds with --release. For tests, try `cargo test --release`."
          args: --release

      - name: Check rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: Rust test
        uses: actions-rs/cargo@v1
        with:
          command: test
          # `--release` needed on Windows to avoid the following error:
          # "Neon only builds with --release. For tests, try `cargo test --release`."
          args: --release

      - name: NPM install
        run: npm install --ignore-scripts

      - name: Neon build
        # `--release` needed on Windows to avoid the following error:
        # "Neon only builds with --release. For tests, try `cargo test --release`."
        run: node_modules/.bin/neon build --release

      - name: Node tests
        run: npm test
